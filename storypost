//
//  Storypost.swift
//  Boss5207418
//
//  Created by Rachelle Ford on 7/11/23.
//


import SwiftUI
import FirebaseAuth
import FirebaseFirestore

struct Storypost: View {
    @Environment(\.presentationMode) var presentationMode
    
    @State private var storyImage: Image?
    @State private var pickedImage: Image?
    @State private var showingActionSheet = false
    @State private var showingImagePicker = false
    @State private var imageData: Data = Data()
    @State private var sourceType: UIImagePickerController.SourceType = .photoLibrary
    @State private var error: String = ""
    @State private var showingAlert = false
    @State private var alertTitle: String = "Oh NoðŸ˜­"
    @State private var text = ""
    
    func loadImage() {
        guard let inputImage = pickedImage else { return }
        storyImage = inputImage
    }
    
    func uploadStory() {
        if let error = errorCheck() {
            self.error = error
            self.showingAlert = true
            self.clear()
            return
        }
        
        guard let currentUser = Auth.auth().currentUser else {
            // Handle the case when the user is not logged in
            return
        }
        
        // Retrieve the user's verification status from the database
        let userRef = Firestore.firestore().collection("users").document(currentUser.uid)
        userRef.getDocument { (snapshot, error) in
            if let error = error {
                // Handle the error
                self.error = error.localizedDescription
                self.showingAlert = true
                return
            }
            
            guard let userData = snapshot?.data(),
                  let isVerified = userData["isVerified"] as? Bool else {
                // Handle the case when the verification status is not available
                self.error = "Verification status not found"
                self.showingAlert = true
                return
            }
            
            if !isVerified {
                self.error = "Oops! Please contact admin to get verified."
                self.showingAlert = true
                self.clear()
                return
            }
            
            // User is verified, proceed with story upload
            StoryService.uploadStory(imageData: imageData, onSuccess: {
                self.clear()
                
                // Dismiss the current view and return to the previous view
                self.presentationMode.wrappedValue.dismiss()
            }) { (errorMessage) in
                self.error = errorMessage
                self.showingAlert = true
                return
            }
        }
    }

    func clear() {
      //  self.text = ""
        self.imageData = Data()
        self.storyImage = Image(systemName: "photo.fill")
    }
    
    func errorCheck() -> String? {
        if imageData.isEmpty{
            
            return "Please upload an image"
        }
        // Add error check if needed
        return nil
    }
    
    var body: some View {
        ZStack {
            Image("back1284pos6")
                .resizable()
                .aspectRatio(contentMode: .fill)
                .edgesIgnoringSafeArea(.all)
            
            ScrollView {
                VStack(spacing: 20) { // Add some spacing between elements
                    Spacer().frame(height: 80)// Add a spacer to push the content to the top
                    
                    VStack(spacing: 10) {
                        ZStack {
                            if storyImage != nil {
                                storyImage!
                                    .resizable()
                                    .frame(width: 350, height: 450)
                                    .onTapGesture {
                                        self.showingActionSheet = true
                                    }
                                
                            } else {
                                Image("pictureupload")
                                    .resizable()
                                    .frame(width: 350, height: 450)
                                    .onTapGesture {
                                        self.showingImagePicker = true
                                    }
                            }
                        }
                    //    TextEditor(text: $text)
                      //      .frame(height: 150)
                       //     .padding(2)
                         //   .background(RoundedRectangle(cornerRadius: 8).stroke(Color.black))
                          //  .padding(.horizontal)
                        
                        Button(action: clear) {
                            Text("Upload Story").font(.title).modifier(ButtonModifiers())
                        }
                    }.padding(.horizontal)
                        .sheet(isPresented: $showingImagePicker, onDismiss: loadImage){
                            ImagePicker(pickedImage: self.$pickedImage, showingImagePicker: self.$showingImagePicker, imageData: self.$imageData)
                        }.actionSheet(isPresented: $showingActionSheet) {
                            ActionSheet(title: Text(""), buttons: [
                                .default(Text("Choose A Photo")){
                                    self.sourceType = .photoLibrary
                                    self.showingImagePicker = true
                                },
                                .default(Text("Take A Photo")){
                                    self.sourceType = .camera
                                    self.showingImagePicker = true
                                    
                                }, .cancel()
                            ])
                            
                        }
                }
            }
        }
    }
}
